#+begin_src R :session *R*
library(stringr)
f <- read.csv("d2_1_input.txt", header = F)
n1_1 <- str_extract(f$V1, "^[^-]*") |> as.numeric()
n2_1 <- str_extract(f$V2, "^[^-]*") |> as.numeric()
n1_2 <- str_extract(f$V1, "[^-]*$") |> as.numeric()
n2_2 <- str_extract(f$V2, "[^-]*$") |> as.numeric()
sum(abs(sign(n1_1 - n2_1) + sign(n1_2 - n2_2)) < 2)
#+end_src

#+RESULTS:
: 550

If V2's first number is larger than V1's first number, diff_1 == -1. For a 'nested' pair, V1's second number would need to be larger than V2's second number, or the same - thus diff_2 will be 1 or 0. The sum of all this will be 0 or -1



If V2's first number is smaller than V1's first number, diff_1 == 1. A nested pair would require V1's second number < V2's second number (or equal) making diff_2 -1 or 0, making the sum 1 or 0.

So the sum doesn't work. I think I need to show that the signs aren't the SAME, but it is completely possible for 0, 0  to work out.

So (-1, 1), (1, -1), (0, 1), (0, -1), (1, 0), (-1, 0), and (0, 0) all work.
(1, 1),

#+begin_src R :session *R*
mapply(\(a, b, c, d) intersect(seq(a, b), seq(c, d)) |> length() > 0, n1_1, n1_2, n2_1, n2_2) |> sum()
#+end_src

#+RESULTS:
: 931
